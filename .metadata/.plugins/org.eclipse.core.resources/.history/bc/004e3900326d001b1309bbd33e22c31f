package Methods;

import java.util.HashMap;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.remote.DesiredCapabilities;

public class Setup {
	public static WebDriver driver;
	
	public WebDriver LaunchChrome(String chromeDriverPath, String URL)
	{
		  System.setProperty("webdriver.chrome.driver",chromeDriverPath);
		  driver=new ChromeDriver();
		  driver.manage().window().maximize();
		  driver.get(URL);
		  
		  return driver;
	}
	
	public WebDriver LaunchChrome(String chromeDriverPath, String downloadFilePath, String URL)
	{
		  System.setProperty("webdriver.chrome.driver",chromeDriverPath);
		  ChromeOptions options=new ChromeOptions();
		  HashMap<String, Object> chromePref = new HashMap<String, Object>();
		  chromePref.put("profile.default_content_settings.popups", 0);
		  chromePref.put("download.default_directory", downloadFilePath);
		  options.setExperimentalOption("prefs", chromePref);
		  driver=new ChromeDriver(options);
		  driver.manage().window().maximize();
		  driver.get(URL);
		  
		  return driver;
	}
	
	public WebDriver LaunchFirefox(String firefoxDriverPath, String URL)
	{
		  System.setProperty("webdriver.gecko.driver",firefoxDriverPath);
		  DesiredCapabilities capabilities = DesiredCapabilities.firefox();
	      capabilities.setCapability("marionette", true);
	      driver = new FirefoxDriver(capabilities);
//	      driver=new FirefoxDriver();
		  driver.manage().window().maximize();
		  return driver;
	}
	
	
	
	
}
